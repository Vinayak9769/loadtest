FROM golang:1.24-alpine AS builder

RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

COPY go.mod go.sum ./

RUN go mod download

COPY . .

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o loadagg .

FROM alpine:latest

RUN apk --no-cache add ca-certificates tzdata

RUN adduser -D -s /bin/sh loadtest

WORKDIR /app

COPY --from=builder /app/loadagg .

COPY --from=builder /app/internal/db/migrations ./internal/db/migrations

RUN chown -R loadtest:loadtest /app

USER loadtest

EXPOSE 8080

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/ping || exit 1

CMD ["./loadagg"]